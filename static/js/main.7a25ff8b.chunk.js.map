{"version":3,"sources":["api.ts","types/ErrorType.ts","context/PeopleContext.tsx","_utils.ts","components/Navigation/Navigation.tsx","components/HomePage/HomePage.tsx","components/PageNotFound/PageNotFound.tsx","components/Loader/Loader.tsx","components/People/PeoplePage.tsx","context/PeopleActions.ts","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","ErrorType","initialState","people","selectedPerson","isLoading","error","peopleReducer","state","action","type","payload","find","p","slug","PeopleContext","createContext","dispatch","PeopleProvider","children","useReducer","useEffect","fetchedPeople","length","EMPTY_ERROR","catch","FETCH_ERROR","value","Provider","getNavLinkClass","isActive","cn","Navigation","className","role","to","HomePage","PageNotFound","Loader","PeoplePage","useContext","createParentLink","parentName","peopleArray","localDispatch","parent","name","parentSlug","sex","onClick","map","person","selectPerson","born","died","motherName","fatherName","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7a25ff8b.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export enum ErrorType {\n  FETCH_ERROR = 'Something went wrong',\n  EMPTY_ERROR = 'There are no people on the server',\n}\n","import React, {\n  ReactNode, createContext, useEffect, useReducer,\n} from 'react';\nimport { Person } from '../types';\nimport { getPeople } from '../api';\nimport { PeopleAction } from './PeopleActions';\nimport { ErrorType } from '../types/ErrorType';\n\ninterface PeopleState {\n  people: Person[];\n  selectedPerson: Person | null;\n  isLoading: boolean;\n  error: ErrorType | null;\n}\n\ninterface StateProviderProps {\n  children: ReactNode;\n}\n\nconst initialState: PeopleState = {\n  people: [],\n  selectedPerson: null,\n  isLoading: false,\n  error: null,\n};\n\nconst peopleReducer = (state: PeopleState, action: PeopleAction) => {\n  switch (action.type) {\n    case 'SET_PEOPLE':\n      return { ...state, people: action.payload };\n    case 'SELECT_PERSON':\n      return {\n        ...state,\n        selectedPerson: state.people\n          .find(p => p.slug === action.payload) ?? null,\n      };\n    case 'SET_LOADING':\n      return { ...state, isLoading: action.payload };\n    case 'SET_ERROR':\n      return { ...state, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nexport const PeopleContext = createContext<{\n  state: PeopleState;\n  dispatch: React.Dispatch<PeopleAction>\n}>(\n  { state: initialState, dispatch: () => null },\n);\n\nexport const PeopleProvider: React.FC<StateProviderProps> = ({ children }) => {\n  const [state, dispatch] = useReducer(peopleReducer, initialState);\n\n  useEffect(() => {\n    dispatch({ type: 'SET_LOADING', payload: true });\n    getPeople()\n      .then(fetchedPeople => {\n        dispatch({ type: 'SET_PEOPLE', payload: fetchedPeople });\n\n        if (!fetchedPeople.length) {\n          dispatch({ type: 'SET_ERROR', payload: ErrorType.EMPTY_ERROR });\n        }\n\n        dispatch({ type: 'SET_LOADING', payload: false });\n      })\n      .catch(() => {\n        dispatch({ type: 'SET_ERROR', payload: ErrorType.FETCH_ERROR });\n        dispatch({ type: 'SET_LOADING', payload: false });\n      });\n  }, []);\n\n  const value = { state, dispatch };\n\n  return (\n    <PeopleContext.Provider value={value}>\n      {children}\n    </PeopleContext.Provider>\n  );\n};\n","import cn from 'classnames';\n\nexport function getNavLinkClass(isActive: boolean) {\n  return cn(\n    'navbar-item',\n    {\n      'has-background-grey-lighter': isActive,\n    },\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { getNavLinkClass } from '../../_utils';\n\nexport const Navigation: React.FC = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => getNavLinkClass(isActive)}\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => getNavLinkClass(isActive)}\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n  // <main className=\"section\">\n\n  // </main>\n    <div className=\"container\">\n      <h1 className=\"title\">Home Page</h1>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const PageNotFound: React.FC = () => (\n  <div className=\"container\">\n    <h1 className=\"title\">Page not found</h1>\n  </div>\n);\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\nimport { Link } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Loader } from '../Loader';\nimport { PeopleContext } from '../../context/PeopleContext';\nimport {\n  selectPerson, DispatchFunction,\n} from '../../context/PeopleActions';\nimport { Person } from '../../types';\nimport { ErrorType } from '../../types/ErrorType';\n\nexport const PeoplePage: React.FC = () => {\n  const { dispatch } = useContext(PeopleContext);\n  const { state } = useContext(PeopleContext);\n  const {\n    isLoading, people, selectedPerson, error,\n  } = state;\n\n  const createParentLink = (\n    parentName: string | null,\n    peopleArray: Person[],\n    localDispatch: DispatchFunction,\n  ) => {\n    const parent = peopleArray.find(p => p.name === parentName);\n    const parentSlug = parent ? parent.slug : null;\n    const className = parent?.sex === 'f' ? 'has-text-danger' : '';\n\n    return parentSlug ? (\n      <Link\n        to={`/people/${parentSlug}`}\n        onClick={() => localDispatch(\n          { type: 'SELECT_PERSON', payload: parentSlug },\n        )}\n        className={className}\n      >\n        {parentName}\n      </Link>\n    ) : parentName;\n  };\n\n  return (\n    <div className=\"container\">\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {error === ErrorType.EMPTY_ERROR && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {error === ErrorType.FETCH_ERROR ? (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          ) : (\n            <table\n              data-cy=\"peopleTable\"\n              className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>Name</th>\n                  <th>Sex</th>\n                  <th>Born</th>\n                  <th>Died</th>\n                  <th>Mother</th>\n                  <th>Father</th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {people.map(person => (\n                  <tr\n                    key={person.slug}\n                    className={cn({\n                      'has-background-warning':\n                        person.slug === selectedPerson?.slug,\n                    })}\n                  >\n                    <td>\n                      <Link\n                        to={`/people/${person.slug}`}\n                        className={person.sex === 'f' ? 'has-text-danger' : ''}\n                        onClick={() => selectPerson(dispatch, person.slug)}\n                      >\n                        {person.name}\n                      </Link>\n                    </td>\n                    <td>{person.sex}</td>\n                    <td>{person.born}</td>\n                    <td>{person.died}</td>\n                    <td>\n                      {createParentLink(person.motherName, people, dispatch)}\n                    </td>\n                    <td>\n                      {createParentLink(person.fatherName, people, dispatch)}\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { Person } from '../types';\nimport { ErrorType } from '../types/ErrorType';\n\nexport type PeopleAction =\n  | { type: 'SET_PEOPLE'; payload: Person[] }\n  | { type: 'SELECT_PERSON'; payload: string }\n  | { type: 'SET_LOADING'; payload: boolean }\n  | { type: 'SET_ERROR'; payload: ErrorType };\n\nexport type DispatchFunction = (action: PeopleAction) => void;\n\nexport const selectPerson\n  = (dispatch: DispatchFunction, slug: string) => {\n    dispatch({ type: 'SELECT_PERSON', payload: slug });\n  };\n","import React from 'react';\nimport {\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { Navigation } from './components/Navigation/Navigation';\nimport { HomePage } from './components/HomePage';\nimport { PageNotFound } from './components/PageNotFound';\nimport { PeoplePage } from './components/People';\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navigation />\n\n      <main className=\"section\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n\n          <Route\n            path=\"/home\"\n            element={<Navigate to=\"/\" replace />}\n          />\n\n          <Route\n            path=\"*\"\n            element={<PageNotFound />}\n          />\n          <Route\n            path=\"/people\"\n            element={<PeoplePage />}\n          />\n          <Route path=\"/people/:slug\" element={<PeoplePage />} />\n        </Routes>\n\n      </main>\n    </div>\n  );\n};\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { PeopleProvider } from './context/PeopleContext';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <PeopleProvider>\n      <Router>\n        <App />\n      </Router>\n    </PeopleProvider>,\n\n  );\n"],"sourceRoot":""}